---
- hosts: all
  connection: local
  vars:
    user: "centos"
  tasks:
    - os_server_info:
        auth:
          auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
          username: "{{ lookup('env', 'OS_USERNAME') }}"
          password: "{{ lookup('env', 'OS_PASSWORD') }}"
          project_name:  "{{ lookup('env', 'OS_PROJECT_NAME') }}"
        validate_certs: False
        cloud: standalone
      register: result
      no_log: true
 
    - set_fact:
        gold: "{{ gold | default([]) + [ item | from_json | json_query(jq) ] }}"
      vars:
        jq: "[?contains(vm_state, 'active') && contains(name, 'gold')].private_v4"
      with_items: "{{ result.openstack_servers | to_json }}"
      no_log: true
 
    - set_fact:
        silver: "{{ silver | default([]) + [ item | from_json | json_query(jq) ] }}"
      vars:
        jq: "[?contains(vm_state, 'active') && contains(name, 'silver')].private_v4"
      with_items: "{{ result.openstack_servers | to_json }}"
      no_log: true
 
    - set_fact:
        bronze: "{{ bronze | default([]) + [ item | from_json | json_query(jq) ] }}"
      vars:
        jq: "[?contains(vm_state, 'active') && contains(name, 'bronze')].private_v4"
      with_items: "{{ result.openstack_servers | to_json }}"
      no_log: true
 
    - set_fact:
        gold: "{{ gold | flatten }}"
 
    - set_fact:
        silver: "{{ silver | flatten }}"
 
    - set_fact:
        bronze: "{{ bronze | flatten }}"
 
    - set_fact:
        servers: "{{ gold + silver + bronze | default([]) }}"

    - copy:
        dest: ./instance-inventory.yaml
        content: |
          all:
            vars:
              ansible_ssh_user: {{ user }}
            hosts:
          {% for ip in servers %}
          {{ ip | indent(width=4, indentfirst=True) }}:
          {% endfor %}
 
          gold:
            vars:
              ansible_ssh_user: {{ user }}
            hosts:
          {% for ip in gold %}
          {{ ip | indent(width=4, indentfirst=True) }}:
          {% endfor %}
 
          silver:
            vars:
              ansible_ssh_user: {{ user }}
            hosts:
          {% for ip in silver %}
          {{ ip | indent(width=4, indentfirst=True) }}:
          {% endfor %}
 
          bronze:
            vars:
              ansible_ssh_user: {{ user }}
            hosts:
          {% for ip in bronze %}
          {{ ip | indent(width=4, indentfirst=True) }}:
          {% endfor %}
